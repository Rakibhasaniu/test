

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // Define the one-to-one relationship with UserProfile
  profile   UserProfile?
  bookings    Booking[]
  @@map("users")
}

model UserProfile {
  id         String    @id @default(uuid())
  userId     String    @unique
  bio        String?
  profession String?
  address    String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  // Define the back-reference to User
  user       User      @relation(fields: [userId], references: [id])
  @@map("user_profiles")
}

model Flat{
  id  String @id @default(uuid())
  squareFeet Int
  totalBedrooms Int
  totalRooms Int
  utilitiesDescription String
  location String
  description String
  rent Int
  availability Boolean @default(true)
  advanceAmount Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  bookings            Booking[]

  @@map("flats")

}

model Booking {
  id        String      @id @default(uuid())
  flat      Flat        @relation(fields: [flatId], references: [id])
  flatId    String
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  status    bookingStatus     @default(PENDING)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@index([flatId, userId], name: "unique_booking_flat_user_idx")
}
enum bookingStatus{
  PENDING
  BOOKED
  REJECTED
}